kind:                                   Deployment   
apiVersion:                             apps/v1         
metadata:
    name:                               deployment-nginx

spec:
    replicas: {{ .Values.nginx.replicas }}
    selector:
        matchLabels:
            app:                        nginx          
    template:
        metadata:
            name:                       template-pod-nginx
            labels:
                app:                    nginx   
                autor:                  {{ .Values.nginx.antiaffinityLabel }}
        spec:
        
        
            affinity: 
                nodeAffinity:
                    requiredDuringSchedulingIgnoredDuringExecution: 
                        nodeSelectorTerms: 
                            - matchExpressions:
                                - key: tipo
                                  operator: In   
                                  values:
                                    - {{ .Values.nginx.nodeLabel }}
                podAntiAffinity:
                    requiredDuringSchedulingIgnoredDuringExecution: 
                        - labelSelector:  
                            matchExpressions:
                                - key: autor
                                  operator: In
                                  values:
                                    - {{ .Values.nginx.antiaffinityLabel }}
                          topologyKey: kubernetes.io/hostname
            volumes:
                -   name:               scripts
                    configMap:
                        name:           scripts
                        defaultMode:    0777
                -   name:               configuracion-nginx
                    configMap:
                        name:           configuracion-nginx
                -   name:               volumen-web
                    #emptyDir:           {}
                    persistentVolumeClaim:
                        claimName:      peticion-volumen-mi-web
            initContainers:
                -   name:               cargador-web
                    image:              ubuntu:latest
                    command:
                                        - sh
                                        - -c 
                                        - /scripts/cargador.sh
                    env:
                        - name:         REPO_URL
                          valueFrom:
                            configMapKeyRef:
                                name:   web
                                key:    URL
                    volumeMounts:
                        - name:         scripts
                          mountPath:    /scripts
                        - name:         volumen-web
                          mountPath:    /misitioWeb
            containers:
                - # Contenedor nginx
                    name:               nginx
                    image:              {{ .Values.nginx.image }}:{{ .Values.nginx.version }}
                    ports:
                        - containerPort: 80
                    volumeMounts:
                        - name:         volumen-web
                          mountPath:    /miweb
                        - name:         configuracion-nginx
                          mountPath:   /etc/nginx/conf.d
