# kubectl apply -f Ejemplo12... -n ivan
# El deployment que tenemos aqui se instale (los pods- replicas= 2)
# Solamente en maquinas de tipo=servidor-web
# Cada pod en una maquina diferente (autor)
---
kind:           Namespace
apiVersion:     v1          

metadata:
    name:       ivan
---
kind:           PersistentVolume
apiVersion:     v1          

metadata:
    name:       volumen-mi-web-ivan
    
spec:
    # Morralla... Información descriptiva
    capacity: 
        storage: 20Gi 
    storageClassName: rapidito-redundante
    accessModes:
        - ReadWriteOnce
        - ReadWriteMany
        - ReadOnlyMany
    
    # Donde esta esto físicamente
    # Tipo de volumen
    hostPath:    # PARA JUGAR
        path: /home/ubuntu/environment/datos/ivan
        type: DirectoryOrCreate 
---
kind:           PersistentVolumeClaim
apiVersion:     v1          

metadata:
    name:       peticion-volumen-mi-web
    
spec:
    resources:
        requests:
            storage: 10Gi # Tamaño que necesito
    # Tipo
    storageClassName: rapidito-redundante
    accessModes:
        - ReadWriteOnce
        
---
kind:           ConfigMap
apiVersion:     v1         
metadata:
    name:       web
data:
    URL:        https://github.com/IvanciniGT/webEjemploAnsible
---
kind:           ConfigMap
apiVersion:     v1         
metadata:
    name:       configuracion-nginx
data:
    default.conf: |
        server {
            listen       80;
            listen  [::]:80;
            server_name  localhost;
        
            #access_log  /var/log/nginx/host.access.log  main;
        
            location / {
                root   /miweb;
                index  index.html index.htm;
            }
            
            error_page   500 502 503 504  /50x.html;
            location = /50x.html {
                root   /miweb;
            }
        
        }
    
---
kind:           ConfigMap
apiVersion:     v1         
metadata:
    name:       scripts

data:
    cargador.sh: |
        #!/bin/bash
    
        apt-get update && apt-get install git -y
        git clone $REPO_URL /misitioWeb
---
kind:                                   Deployment   
apiVersion:                             apps/v1         
metadata:
    name:                               deployment-nginx

spec:
    replicas: 1
    selector:
        matchLabels:
            app:                        nginx          
    template:
        metadata:
            name:                       template-pod-nginx
            labels:
                app:                    nginx   
                autor:                  ivan
        spec:
        
        
            affinity: 
                nodeAffinity:
                    requiredDuringSchedulingIgnoredDuringExecution: 
                        nodeSelectorTerms: 
                            - matchExpressions:
                                - key: tipo
                                  operator: In   
                                  values:
                                    - servidor-web
                podAntiAffinity:
                    requiredDuringSchedulingIgnoredDuringExecution: 
                        - labelSelector:  
                            matchExpressions:
                                - key: autor
                                  operator: In
                                  values:
                                    - ivan
                          topologyKey: kubernetes.io/hostname
            volumes:
                -   name:               scripts
                    configMap:
                        name:           scripts
                        defaultMode:    0777
                -   name:               configuracion-nginx
                    configMap:
                        name:           configuracion-nginx
                -   name:               volumen-web
                    #emptyDir:           {}
                    persistentVolumeClaim:
                        claimName:      peticion-volumen-mi-web
            initContainers:
                -   name:               cargador-web
                    image:              ubuntu:latest
                    command:
                                        - sh
                                        - -c 
                                        - /scripts/cargador.sh
                    env:
                        - name:         REPO_URL
                          valueFrom:
                            configMapKeyRef:
                                name:   web
                                key:    URL
                    volumeMounts:
                        - name:         scripts
                          mountPath:    /scripts
                        - name:         volumen-web
                          mountPath:    /misitioWeb
            containers:
                - # Contenedor nginx
                    name:               nginx
                    image:              nginx:latest
                    ports:
                        - containerPort: 80
                    volumeMounts:
                        - name:         volumen-web
                          mountPath:    /miweb
                        - name:         configuracion-nginx
                          mountPath:   /etc/nginx/conf.d
---
kind:           Service
apiVersion:     v1          

metadata:
    name:       nginx 
    
spec:
    type: NodePort 
    ports:
        - port: 80
          targetPort: 80
          protocol: TCP
          #nodePort: 30080
    selector:
        app: nginx